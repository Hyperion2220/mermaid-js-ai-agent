ðŸ”— -------- Prompt Chain Result #1 -------------

You are a world-class expert at creating mermaid charts.

You follow the instructions perfectly to generate mermaid charts.

<instructions>
    <instruction>Based on the user-prompt, create the corresponding mermaid chart.</instruction>
    <instruction>Be very precise with the chart, every node and edge must be included.</instruction>
    <instruction>Use double quotes for text in the chart</instruction>
    <instruction>Respond with the mermaid chart only.</instruction>
    <instruction>Do not wrap the mermaid chart in markdown code blocks. Respond with the mermaid chart only.</instruction>
    <instruction>If you see a <file-content> section, use the content to help create the chart.</instruction>
</instructions>


<file-content>
    # Mermaid Agent

## Setup
- Install [uv](https://docs.astral.sh/uv/getting-started/installation/)
- Install dependencies `uv sync`
- Set your OpenAI API key as an environment variable `export OPENAI_API_KEY=<your_api_key>`
- Optionally setup 
  - Optionally set ANTHROPIC_API_KEY, VERTEX_API_KEY, GROQ_API_KEY as environment variables. See `.env.sample` for details.

## Docs on gemini models
- https://ai.google.dev/api/models#models_list-SHELL
- Run this to get the latest models:
  - `export GOOGLE_API_KEY=<FILL IN HERE>`
  - `curl "https://generativelanguage.googleapis.com/v1beta/models?key=$GOOGLE_API_KEY"`  


</file-content>


<examples>
    <example>
        <user-chart-request>
            Create a flowchart that shows A flowing to E. At C, branch out to H and I.
        </user-chart-request>
        <chart-response>
            graph LR;
                A
                B
                C
                D
                E
                H
                I

                A --> B
                A --> C
                A --> D
                C --> H
                C --> I
                D --> E
        </chart-response>
    </example>
    <example>
        <user-chart-request>
            Build a pie chart that shows the distribution of Apples: 40, Bananas: 35, Oranges: 25.
        </user-chart-request>
        <chart-response>
            pie title Distribution of Fruits
                "Apples" : 40
                "Bananas" : 35
                "Oranges" : 25
        </chart-response>
    </example>
    <example>
        <user-chart-request>
            State diagram for a traffic light. Still, Moving, Crash.
        </user-chart-request>
        <chart-response>
            stateDiagram-v2
                [*] --> Still
                Still --> [*]

                Still --> Moving
                Moving --> Still
                Moving --> Crash
                Crash --> [*]
        </chart-response>
    </example>
    <example>
        <user-chart-request>
            Create a timeline of major social media platforms from 2002 to 2006.
        </user-chart-request>
        <chart-response>
            timeline
                title History of Social Media Platforms
                2002 : LinkedIn
                2004 : Facebook
                     : Google
                2005 : Youtube
                2006 : Twitter
        </chart-response>
    </example>
</examples>

<user-prompt>
    
</user-prompt>

Your mermaid chart:

ðŸ”—ðŸ”— -------- Prompt Chain Result #2 -------------

You are a world-class expert at creating mermaid charts.

Your co-worker has just generated a mermaid chart.

It's your job to review the chart to ensure it's correct.

If you see any mistakes, be very precise in what the mistakes are.

<instructions>
    <instruction>Review the chart to ensure it's correct.</instruction>
    <instruction>Be very precise in your critique.</instruction>
    <instruction>If you see any mistakes, correct them.</instruction>
    <instruction>Respond with the corrected mermaid chart.</instruction>
    <instruction>Do not wrap the mermaid chart in markdown code blocks. Respond with the mermaid chart only.</instruction>
    <instruction>If the chart is already correct, respond with the chart only.</instruction>
</instructions>

<mermaid-chart>
    ```mermaid
graph LR
    subgraph "Setup"
        A["Install uv"] --> B["Install dependencies: <br> uv sync"]
        B --> C{"Set OpenAI API key: <br> export OPENAI_API_KEY=<your_api_key>"}
    end
    C --> D("Optionally setup <br> other API keys")
    D --> E("Docs on gemini models")
    E --> F("Get latest models")
```

</mermaid-chart>

Your critique of the mermaid chart:

